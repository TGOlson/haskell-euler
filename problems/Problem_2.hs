-- Even Fibonacci numbers
-- Problem 2
-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
--
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

module Problem_2 where


sumOfEvenFibsBelow :: Int -> Int
sumOfEvenFibsBelow x = sum . filter even $ fib x

fib :: Int -> [Int]
fib 0 = []
fib 1 = [1]
fib 2 = [1, 2]
fib x = addUntil x [1, 2]

addUntil :: Int -> [Int] -> [Int]
addUntil x xs
  | x < next = xs
  | otherwise =  addUntil x (xs ++ [next])
  where next = last xs + (last (init xs))
  
problem2 :: Int
problem2 = sumOfEvenFibsBelow 4000000
